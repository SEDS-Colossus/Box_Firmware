C51 COMPILER V9.56.0.0   CONTROL_BOX_FIRMWARE                                              01/28/2017 10:28:41 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE CONTROL_BOX_FIRMWARE
OBJECT MODULE PLACED IN .\Objects\control_box_firmware.obj
COMPILER INVOKED BY: C:\Program Files\Keil_C51\C51\BIN\C51.EXE control_box_firmware.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJ
                    -ECTEXTEND PRINT(.\Listings\control_box_firmware.lst) TABS(2) OBJECT(.\Objects\control_box_firmware.obj)

line level    source

   1          //matts board
   2          /*************************************************************************
   3           *  @File Descption: Read states of manual override buttons of control_box
   4           *  and bi-directional communication via UART with main_board.
   5           *  @File: control_box_firmware.c
   6           *  @author(s):
   7           *  -Tawfic Rabbani, Embedded Systems Engineer, head of softwar
   8           *  -Matthew Santos, Electrical and Software Engineer
   9           *  @Property of SEDS UCSD
  10           *  @since: 10/2016
  11           *************************************************************************/
  12          #include "reg60s2.h" //Include reg file for 8051 architecure
  13          #include <math.h> //used for pow function
  14          
  15          /*************************************************************************
  16           *                            -- VARIABLES --
  17           *  Each variable is a pin on the MCU that can be read/write 1/0.
  18           *  Syntax:
  19           *       varaible-type  variable-name = pin;
  20           *************************************************************************/
  21          sbit LED1 = P0^0;
  22          sbit LED2 = P0^1;
  23          sbit LED3 = P0^2;
  24          sbit LED4 = P0^3;
  25          sbit LED5 = P0^4;
  26          sbit LED6 = P0^5;
  27          sbit LED7 = P0^6;
  28          sbit LED8 = P0^7;
  29          
  30          sbit pot1 = P1^0;
  31          sbit pot2 = P1^1;
  32          sbit battlvl = P1^2;
  33          sbit sw1 = P1^3;
  34          sbit dc = P1^4;
  35          sbit din = P1^5;
  36          sbit cs= P1^6;
  37          sbit sclk = P1^7;
  38          
  39          sbit LED12 = P2^7;
  40          sbit sw8 = P2^6;
  41          sbit sw9 = P2^5;
  42          sbit sw10 = P2^4;
  43          sbit sw11 = P2^3;
  44          sbit sw12 = P2^2;
  45          sbit swtog = P2^1;
  46          sbit LEDtog = P2^0;
  47          
  48          sbit sw2 = P3^2;
  49          sbit sw3 = P3^3;
  50          sbit sw4 = P3^4;
  51          sbit sw5 = P3^5;
  52          sbit sw6 = P3^6;
  53          sbit sw7 = P3^7;
  54          
C51 COMPILER V9.56.0.0   CONTROL_BOX_FIRMWARE                                              01/28/2017 10:28:41 PAGE 2   

  55          sbit LED9 = P4^6;
  56          sbit LED10 = P4^5;
  57          sbit LED11 = P4^4;
  58          
  59          /*************************************************************************
  60           *                                   --PROTOTYPES--
  61           *************************************************************************/
  62          void uart_init(); //uart initialization
  63          void timer_init(); //Timer 2 in mode 2 for Baud rate for 9600
  64          void uart_tx(unsigned char x); //transmit function to send data from 8051 to other device
  65          unsigned char uart_rx(); //return function to receive data from other device
  66          bit is_good(); //handshake check
  67          bit receive(); //receive data from main_board
  68          bit CRC_check(); //check if no data is lost
  69          void button_check(); //check which buttons are activated
  70          void verify_states(); //set pending led status based on button actions
  71          void CRC_generator(); //generate CRC and append to end of data being sent
  72          void send(); //send data to main_board
  73          void print_errors(); //TODO: put codes into dictionary to print error messages
  74          
  75          /*************************************************************************
  76           *                          --GLOBAL VARIABLES--
  77           *************************************************************************/
  78          const unsigned char SEND_COUNT = 19; //1 tog + 12 sw + 2 pot + 4 crc = 19 total send elements
  79          unsigned char input[30]; //stores all recieved inputs
  80          unsigned char output[19]; //stores all commands to be sent
  81          long DIVISOR = 0x17; //x^4+x^2+x+1
  82          long xor_value = 0x0;
  83          long crc = 0x0;
  84          int remainder = 0;
  85          int i = 0;
  86          
  87          /*************************************************************************
  88           *                          -- MAIN FUNCTION --
  89           *  @Descption: This function will instatiate the UART connection.
  90           *               Inside the while(1) is where the main code will be
  91           *               written.the unsigned char array "input" will be where
  92           *               commands will be stored when they are sent over and
  93           *               then evaluated. The first bit of input will indicate
  94           *               an error message or a state message is being received.
  95           *               0 is a state message, 1 is an error message. Input loop
  96           *               will end when '?' is sent. This will be the indicator as
  97           *               when all informaiton has been sent.
  98           *
  99           *  @PRECONDITION: none
 100           *
 101           *  @POSTCONDITION: -connenction between two MCU's will be complete
 102           *                  -commands will be received and delt with
 103           *                  -commands will be sent to other MCU
 104           *
 105           *  @PARAMETER: none
 106           *
 107           *  @RETURN: none
 108           *************************************************************************/
 109          void main() {
 110   1        while(!is_good()); //wait for handshake
 111   1        uart_init(); //must be called to initialize communication
 112   1        
 113   1        while(1) { //loop forever
 114   2          /* GET NEW DATA FROM main_board */
 115   2          if(receive()) { //received good data from main_board
 116   3            leds_update(); //update all led status with new data
C51 COMPILER V9.56.0.0   CONTROL_BOX_FIRMWARE                                              01/28/2017 10:28:41 PAGE 3   

*** WARNING C206 IN LINE 116 OF control_box_firmware.c: 'leds_update': missing function-prototype
 117   3            print_errors(); //print error messages to oled
 118   3          } else {
 119   3            //TODO: ask main_board for re-send
 120   3            //TODO: PRINT TO OLED "bad connection"
 121   3          }
 122   2          /* OVERRIDE INACTIVE */
 123   2          if(!swtog) { //swtog is OFF, no override
 124   3            output[0] = 0; //set "OVERRIDE" element OFF
 125   3            send(); //notify main_board
 126   3          /* OVERRIDE ACTIVE */
 127   3          } else { //swtog is ON, override active
 128   3            button_check(); //read button actions, set send[] elements
 129   3            output[0] = 1; //set "OVERRIDE" element ON
 130   3            verify_states(); //set led status based on input data
 131   3            CRC_generator(); //append CRC remainder to output
 132   3            send(); //send data to main_board
 133   3          } //end if/else
 134   2        } //end while
 135   1      } //end main
 136          
 137          
 138          /*************************************************************************
 139           *                          --IS_GOOD--
 140           *  @Descption:
 141           *
 142           *  @PRECONDITION:
 143           *
 144           *  @POSTCONDITION: checks if an the connection is good
 145           *                                 between the two UARTS
 146           *
 147           *  @PARAMETER: none
 148           *
 149           *  @RETURN: int
 150           *************************************************************************/
 151          bit is_good() {
 152   1        uart_tx('g');
 153   1        if(uart_rx() == 'g')
 154   1          return 1;
 155   1        else
 156   1          return 0;
 157   1      }
 158          
 159          bit receive() {
 160   1           //the number of bits you add to the input is one less than the divisor
 161   1           i = 0;
 162   1           while (i != 31) { //start input loop
 163   2                input[i] = uart_rx();
 164   2                i++; //used to insert in next array position
 165   2           } //end of while input
 166   1           if(CRC_check()) //convert input to hex to save space -- this is stored in the global hex array
 167   1                return 1;
 168   1           else
 169   1                return 0;
 170   1      }
 171          
 172          bit CRC_check(){
 173   1           xor_value = 0x0;
 174   1           crc = 0x0;
 175   1           remainder = 0;
 176   1           for(i = 0; i != 30; i++);
 177   1                crc = crc + (int)input[i]*pow(2,i);
C51 COMPILER V9.56.0.0   CONTROL_BOX_FIRMWARE                                              01/28/2017 10:28:41 PAGE 4   

 178   1      
 179   1           xor_value = crc ^ DIVISOR;
 180   1      
 181   1           remainder =  remainder + (xor_value % 2);
 182   1           xor_value = xor_value/2;
 183   1           remainder =  remainder + (xor_value % 2);
 184   1           xor_value = xor_value/2;
 185   1           remainder =  remainder + (xor_value % 2);
 186   1           xor_value = xor_value/2;
 187   1           remainder =  remainder + (xor_value % 2);
 188   1      
 189   1           if(remainder == 0)
 190   1                return 1;
 191   1           else
 192   1                return 0;
 193   1      }
 194          
 195          void button_check() { //change this to what I have in peters board
 196   1        /*
 197   1          if(p1_3 == 1 && p1_3tog == 0) { //SW1
 198   1            p1_3tog = 1;
 199   1            send[0] = '1';
 200   1          }
 201   1          if else(p1_3 == 1 && p1_3tog == 1) {
 202   1            p1_3tog = 0;
 203   1            send[0] = '0';
 204   1          }
 205   1        */
 206   1      
 207   1          
 208   1          
 209   1          if(p3_2 == 1) //SW2
*** ERROR C202 IN LINE 209 OF control_box_firmware.c: 'p3_2': undefined identifier
 210   1          send[1] = 0x00;
*** ERROR C183 IN LINE 210 OF control_box_firmware.c: unmodifiable lvalue
 211   1          if(p3_2 == 0)
*** ERROR C202 IN LINE 211 OF control_box_firmware.c: 'p3_2': undefined identifier
 212   1          send[1] = 0x5A;
*** ERROR C183 IN LINE 212 OF control_box_firmware.c: unmodifiable lvalue
 213   1           if(p3_3 == 1) //SW3
*** ERROR C202 IN LINE 213 OF control_box_firmware.c: 'p3_3': undefined identifier
 214   1          send[2] = '1';
*** ERROR C183 IN LINE 214 OF control_box_firmware.c: unmodifiable lvalue
 215   1           if (p3_3 == 0)
*** ERROR C202 IN LINE 215 OF control_box_firmware.c: 'p3_3': undefined identifier
 216   1          send[2] = '0';
*** ERROR C183 IN LINE 216 OF control_box_firmware.c: unmodifiable lvalue
 217   1           if(p3_4 == 1) //SW4
*** ERROR C202 IN LINE 217 OF control_box_firmware.c: 'p3_4': undefined identifier
 218   1          send[3] = '1';
*** ERROR C183 IN LINE 218 OF control_box_firmware.c: unmodifiable lvalue
 219   1           if (p3_4 == 0)
*** ERROR C202 IN LINE 219 OF control_box_firmware.c: 'p3_4': undefined identifier
 220   1          send[3] = '0';
*** ERROR C183 IN LINE 220 OF control_box_firmware.c: unmodifiable lvalue
 221   1           if(p3_5 == 1) //SW5
*** ERROR C202 IN LINE 221 OF control_box_firmware.c: 'p3_5': undefined identifier
 222   1          send[4] = '1';
*** ERROR C183 IN LINE 222 OF control_box_firmware.c: unmodifiable lvalue
 223   1           if (p3_5 == 0)
*** ERROR C202 IN LINE 223 OF control_box_firmware.c: 'p3_5': undefined identifier
 224   1          send[4] = '0';
C51 COMPILER V9.56.0.0   CONTROL_BOX_FIRMWARE                                              01/28/2017 10:28:41 PAGE 5   

*** ERROR C183 IN LINE 224 OF control_box_firmware.c: unmodifiable lvalue
 225   1           if(p3_6 == 1) //SW6
*** ERROR C202 IN LINE 225 OF control_box_firmware.c: 'p3_6': undefined identifier
 226   1          send[5] = '1';
*** ERROR C183 IN LINE 226 OF control_box_firmware.c: unmodifiable lvalue
 227   1           if(p3_6 == 0)
*** ERROR C202 IN LINE 227 OF control_box_firmware.c: 'p3_6': undefined identifier
 228   1          send[5] = '0';
*** ERROR C183 IN LINE 228 OF control_box_firmware.c: unmodifiable lvalue
 229   1           if(p3_7 == 1) //SW7
*** ERROR C202 IN LINE 229 OF control_box_firmware.c: 'p3_7': undefined identifier
 230   1          send[6] = '1';
*** ERROR C183 IN LINE 230 OF control_box_firmware.c: unmodifiable lvalue
 231   1           if(p3_7 == 0)
*** ERROR C202 IN LINE 231 OF control_box_firmware.c: 'p3_7': undefined identifier
 232   1          send[6] = '0';
*** ERROR C183 IN LINE 232 OF control_box_firmware.c: unmodifiable lvalue
 233   1           if(p2_6 == 1) //SW8
*** ERROR C202 IN LINE 233 OF control_box_firmware.c: 'p2_6': undefined identifier
 234   1          send[7] = '1';
*** ERROR C183 IN LINE 234 OF control_box_firmware.c: unmodifiable lvalue
 235   1           if (p2_6 == 0)
*** ERROR C202 IN LINE 235 OF control_box_firmware.c: 'p2_6': undefined identifier
 236   1          send[7] = '0';
*** ERROR C183 IN LINE 236 OF control_box_firmware.c: unmodifiable lvalue
 237   1           if(p2_5 == 1) //SW9
*** ERROR C202 IN LINE 237 OF control_box_firmware.c: 'p2_5': undefined identifier
 238   1          send[8] = '1';
*** ERROR C183 IN LINE 238 OF control_box_firmware.c: unmodifiable lvalue
 239   1           if (p2_5 == 0)
*** ERROR C202 IN LINE 239 OF control_box_firmware.c: 'p2_5': undefined identifier
 240   1          send[8] = '0';
*** ERROR C183 IN LINE 240 OF control_box_firmware.c: unmodifiable lvalue
 241   1           if(p2_4 == 1) //SW10
*** ERROR C202 IN LINE 241 OF control_box_firmware.c: 'p2_4': undefined identifier
 242   1          send[9] = '1';
*** ERROR C183 IN LINE 242 OF control_box_firmware.c: unmodifiable lvalue
 243   1           if(p2_4 == 0)
*** ERROR C202 IN LINE 243 OF control_box_firmware.c: 'p2_4': undefined identifier
 244   1          send[9] = '0';
*** ERROR C183 IN LINE 244 OF control_box_firmware.c: unmodifiable lvalue
 245   1           if(p2_3 == 1) //SW11
*** ERROR C202 IN LINE 245 OF control_box_firmware.c: 'p2_3': undefined identifier
 246   1          send[10] = '1';
*** ERROR C183 IN LINE 246 OF control_box_firmware.c: unmodifiable lvalue
 247   1           if(p2_3 == 0)
*** ERROR C202 IN LINE 247 OF control_box_firmware.c: 'p2_3': undefined identifier
 248   1          send[10] = '0';
*** ERROR C183 IN LINE 248 OF control_box_firmware.c: unmodifiable lvalue
 249   1           if(p2_2 == 1) //SW12
*** ERROR C202 IN LINE 249 OF control_box_firmware.c: 'p2_2': undefined identifier
 250   1          send[11] = '1';
*** ERROR C183 IN LINE 250 OF control_box_firmware.c: unmodifiable lvalue
 251   1           if (p2_2 == 0)
*** ERROR C202 IN LINE 251 OF control_box_firmware.c: 'p2_2': undefined identifier
 252   1          send[11] = '0';
*** ERROR C183 IN LINE 252 OF control_box_firmware.c: unmodifiable lvalue
 253   1           if(p2_1 == 1)  //override switch
*** ERROR C202 IN LINE 253 OF control_box_firmware.c: 'p2_1': undefined identifier
 254   1          send[12] = '1';
*** ERROR C183 IN LINE 254 OF control_box_firmware.c: unmodifiable lvalue
 255   1           if(p2_1 == 0)
C51 COMPILER V9.56.0.0   CONTROL_BOX_FIRMWARE                                              01/28/2017 10:28:41 PAGE 6   

*** ERROR C202 IN LINE 255 OF control_box_firmware.c: 'p2_1': undefined identifier
 256   1          send[12] = '0';
*** ERROR C183 IN LINE 256 OF control_box_firmware.c: unmodifiable lvalue
 257   1           if(p1_0 == 1) //potentiometer
*** ERROR C202 IN LINE 257 OF control_box_firmware.c: 'p1_0': undefined identifier
 258   1          send[13] ='1';
*** ERROR C183 IN LINE 258 OF control_box_firmware.c: unmodifiable lvalue
 259   1           if(p1_0 == 0)
*** ERROR C202 IN LINE 259 OF control_box_firmware.c: 'p1_0': undefined identifier
 260   1          send[13] = '0';
*** ERROR C183 IN LINE 260 OF control_box_firmware.c: unmodifiable lvalue
 261   1           if(p1_1 == 1) //potentiometer
*** ERROR C202 IN LINE 261 OF control_box_firmware.c: 'p1_1': undefined identifier
 262   1          send[14] ='1';
*** ERROR C183 IN LINE 262 OF control_box_firmware.c: unmodifiable lvalue
 263   1           if(p1_1 == 0)
*** ERROR C202 IN LINE 263 OF control_box_firmware.c: 'p1_1': undefined identifier
 264   1          send[14] = '0';
*** ERROR C183 IN LINE 264 OF control_box_firmware.c: unmodifiable lvalue
 265   1      }
 266          
 267          void verify_states() {
 268   1              //solinoids are off -- LEDS are inverted. 1 == off, 0 == on
 269   1              if(input[1] == '1' && input[14] == '0') //SW1
 270   1                p0_0 = 1;
*** ERROR C202 IN LINE 270 OF control_box_firmware.c: 'p0_0': undefined identifier
 271   1              if(input[2] == '1' && input[15] == '0') //SW2
 272   1                p0_1 = 1;
*** ERROR C202 IN LINE 272 OF control_box_firmware.c: 'p0_1': undefined identifier
 273   1              if(input[3] == '1' && input[16] == '0') //SW3
 274   1                p0_2 = 1;
*** ERROR C202 IN LINE 274 OF control_box_firmware.c: 'p0_2': undefined identifier
 275   1              if(input[4] == '1' && input[17] == '0') //SW4
 276   1                p0_3 = 1;
*** ERROR C202 IN LINE 276 OF control_box_firmware.c: 'p0_3': undefined identifier
 277   1              if(input[5] == '1' && input[18] == '0') //SW5
 278   1                p0_4 = 1;
*** ERROR C202 IN LINE 278 OF control_box_firmware.c: 'p0_4': undefined identifier
 279   1              if(input[6] == '1' && input[19] == '0') //SW6
 280   1                p0_5 = 1;
*** ERROR C202 IN LINE 280 OF control_box_firmware.c: 'p0_5': undefined identifier
 281   1              if(input[7] == '1' && input[20] == '0') //SW7
 282   1                p0_6 = 1;
*** ERROR C202 IN LINE 282 OF control_box_firmware.c: 'p0_6': undefined identifier
 283   1              if(input[8] == '1' && input[21] == '0') //SW8
 284   1                p0_7 = 1;
*** ERROR C202 IN LINE 284 OF control_box_firmware.c: 'p0_7': undefined identifier
 285   1              if(input[9] == '1' && input[22] == '0') //SW9
 286   1                p4_6 = 1;
*** ERROR C202 IN LINE 286 OF control_box_firmware.c: 'p4_6': undefined identifier
 287   1              if(input[10] == '1' && input[23] == '0') //SW10
 288   1                p4_5 = 1;
*** ERROR C202 IN LINE 288 OF control_box_firmware.c: 'p4_5': undefined identifier
 289   1              if(input[11] == '1' && input[24] == '0') //SW11
 290   1                p4_4 = 1;
*** ERROR C202 IN LINE 290 OF control_box_firmware.c: 'p4_4': undefined identifier
 291   1              if(input[12] == '1' && input[25] == '0') //SW11
 292   1                p2_7 = 1;
*** ERROR C202 IN LINE 292 OF control_box_firmware.c: 'p2_7': undefined identifier
 293   1      
 294   1              //if solinoids are on
 295   1              if((input[1] == '1' || input[1] == '0') && input[14] == '1')
C51 COMPILER V9.56.0.0   CONTROL_BOX_FIRMWARE                                              01/28/2017 10:28:41 PAGE 7   

 296   1                p0_1 = 0;
*** ERROR C202 IN LINE 296 OF control_box_firmware.c: 'p0_1': undefined identifier
 297   1              if((input[2] == '1' || input[2] == '0') && input[15] == '1')
 298   1                p0_2 = 0;
*** ERROR C202 IN LINE 298 OF control_box_firmware.c: 'p0_2': undefined identifier
 299   1              if((input[3] == '1' || input[3] == '0') && input[16] == '1')
 300   1                p0_3 = 0;
*** ERROR C202 IN LINE 300 OF control_box_firmware.c: 'p0_3': undefined identifier
 301   1              if((input[4] == '1' || input[4] == '0') && input[17] == '1')
 302   1                p0_4 = 0;
*** ERROR C202 IN LINE 302 OF control_box_firmware.c: 'p0_4': undefined identifier
 303   1              if((input[5] == '1' || input[5] == '0') && input[18] == '1')
 304   1                p0_5 = 0;
*** ERROR C202 IN LINE 304 OF control_box_firmware.c: 'p0_5': undefined identifier
 305   1              if((input[6] == '1' || input[6] == '0') && input[19] == '1')
 306   1                p0_6 = 0;
*** ERROR C202 IN LINE 306 OF control_box_firmware.c: 'p0_6': undefined identifier
 307   1              if((input[7] == '1' || input[7] == '0') && input[20] == '1')
 308   1                p0_7 = 0;
*** ERROR C202 IN LINE 308 OF control_box_firmware.c: 'p0_7': undefined identifier
 309   1              if((input[8] == '1' || input[8] == '0') && input[21] == '1')
 310   1                p4_6 = 0;
*** ERROR C202 IN LINE 310 OF control_box_firmware.c: 'p4_6': undefined identifier
 311   1              if((input[9] == '1' || input[9] == '0') && input[22] == '1')
 312   1                p4_5 = 0;
*** ERROR C202 IN LINE 312 OF control_box_firmware.c: 'p4_5': undefined identifier
 313   1              if((input[10] == '1' || input[10] == '0') && input[23] == '1')
 314   1                p4_4 = 0;
*** ERROR C202 IN LINE 314 OF control_box_firmware.c: 'p4_4': undefined identifier
 315   1              if((input[11] == '1' || input[11] == '0') && input[24] == '1')
 316   1                p2_7 = 0;
*** ERROR C202 IN LINE 316 OF control_box_firmware.c: 'p2_7': undefined identifier
 317   1              if((input[12] == '1' || input[12] == '0') && input[25] == '1')
 318   1                p2_2 = 0;
*** ERROR C202 IN LINE 318 OF control_box_firmware.c: 'p2_2': undefined identifier
 319   1      }
 320          
 321          void CRC_generator() {
 322   1           xor_value = 0x0;
 323   1           crc = 0x0;
 324   1           remainder = 0;
 325   1           i = 0;
 326   1      
 327   1           for(i = 0; i != 18; i++)
 328   1                crc = crc + (int)send[i]*pow(2,i);
 329   1      
 330   1           xor_value = crc ^ DIVISOR;
 331   1      
 332   1           for(i = 18; i != 15; i--) { // may need to be i != 14. Check through testing
 333   2                remainder = xor_value %2;
 334   2                xor_value = xor_value/2;
 335   2                if (remainder == 1)
 336   2                     send[i] = '1';
*** ERROR C183 IN LINE 336 OF control_box_firmware.c: unmodifiable lvalue
 337   2                else
 338   2                     send[i] = '0';
*** ERROR C183 IN LINE 338 OF control_box_firmware.c: unmodifiable lvalue
 339   2           }
 340   1      }
 341          
 342          void send() {
 343   1           i = 0;
C51 COMPILER V9.56.0.0   CONTROL_BOX_FIRMWARE                                              01/28/2017 10:28:41 PAGE 8   

 344   1           while (i != 18) {
 345   2                uart_tx(send[i]);
 346   2                i++;
 347   2           }
 348   1      }
 349          
 350          void print_errors() {
 351   1        //TODO: print erros to screen
 352   1      }
 353          
 354          /*************************************************************************
 355           *                             -- UART INITIALIZATION --
 356           *  @Descption: First thing called from the main function. This will
 357           *              instantiate the uart
 358           *
 359           *  @PRECONDITION: main() is called
 360           *
 361           *  @POSTCONDITION: Data is set to 8 bit length and baud rate set to
 362           *                  9600 baud.
 363           *
 364           *  @PARAMETER: none
 365           *
 366           *  @RETURN: none
 367           *************************************************************************/
 368          void uart_init() {
 369   1        SCON = 0x50;  //Setting data as 8bit and receive enable
 370   1        timer_init(); //baud rate is 9600
 371   1      }
 372          
 373          /*************************************************************************
 374           *                       -- TIMER INITIALIZATION --
 375           *  @Descption: Timers will be set correct for the 8051 architecure. These
 376           *              timers set the reload mode for filling the buffer with
 377           *              messages to be sent.
 378           *
 379           *  @PRECONDITION: uart_init() is called
 380           *
 381           *  @POSTCONDITION: timers are set for correct reading bit lengths
 382           *
 383           *  @PARAMETER: none
 384           *
 385           *  @RETURN: none
 386           *************************************************************************/
 387          void timer_init() {
 388   1        TMOD = 0x20; //timer 1 in mode 2 i.e. auto reload mode
 389   1        TH1 = 0xFD;  //reload value is FD for 9600 baud rate
 390   1                     //(Found in table in READ_Me file)
 391   1        TR1 = 1;     //Timer 1 enable
 392   1      }
 393          
 394          /*************************************************************************
 395           *                       -- UART TRANSMITION --
 396           *  @Descption: Sends values to other device using uart transmition.
 397           *              Sends the single char value to the buffer and sends the
 398           *              char in 8 bits.
 399           *
 400           *  @PRECONDITION: called from main() from within main while loop
 401           *
 402           *  @POSTCONDITION: individual message will be sent as one char
 403           *
 404           *  @PARAMETER: unsigned char
 405           *
C51 COMPILER V9.56.0.0   CONTROL_BOX_FIRMWARE                                              01/28/2017 10:28:41 PAGE 9   

 406           *  @RETURN: none
 407           *************************************************************************/
 408          void uart_tx(unsigned char x) {
 409   1        SBUF = x;   //Load data to serial buffer register associated to UART
 410   1        while(!TI); //transmit flag change when MSB is sent
 411   1        TI=0;       //clear the transmit flag
 412   1      }
 413          
 414          /*************************************************************************
 415           *                         -- UART RECEIVER --
 416           *  @Descption: Receives message from other device using the uart
 417           *              receiver pin. Message is read from the buffer and sent
 418           *              back to the user
 419           *
 420           *  @PRECONDITION: called from main() from within main while loop
 421           *
 422           *  @POSTCONDITION: individual 8 bit char read from the buffer and
 423           *                  sent back to the user
 424           *
 425           *  @PARAMETER: none
 426           *
 427           *  @RETURN: unsigned char
 428           *************************************************************************/
 429          unsigned char uart_rx() {
 430   1        unsigned char z;
 431   1        while(!RI); //receive flag gets changed only when 8bits are received in SBUF
 432   1        z = SBUF;   //Moving data into z variable
 433   1        RI = 0;
 434   1        return(z);
 435   1      }

C51 COMPILATION COMPLETE.  1 WARNING(S),  82 ERROR(S)
